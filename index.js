// Generated by CoffeeScript 1.7.1
(function() {
  var bitState,
    __slice = [].slice;

  bitState = require('bit-state');

  module.exports = function(method) {
    var chain, convertToMs, convertToNumberAndUnits, dictUnitSeconds, every, repeat, shouldRun;
    dictUnitSeconds = {
      seconds: 1,
      minutes: 60,
      hours: 3600
    };
    shouldRun = bitState();
    convertToNumberAndUnits = function(str) {
      return (str.match(/^\d/) ? str : "1 " + str + "s").split(/\s/);
    };
    convertToMs = function(strInterval) {
      var nb, unit, _ref;
      _ref = convertToNumberAndUnits(strInterval), nb = _ref[0], unit = _ref[1];
      return +nb * 1000 * dictUnitSeconds[unit];
    };
    repeat = function(strInterval) {
      if (shouldRun.is(true)) {
        method();
      }
      return every(strInterval);
    };
    every = function(str) {
      return setTimeout((function() {
        return repeat(str);
      }), convertToMs(str));
    };
    chain = function(method) {
      return function() {
        var args;
        args = 1 <= arguments.length ? __slice.call(arguments, 0) : [];
        method.apply(null, args);
        return this;
      };
    };
    return {
      pause: chain(shouldRun.no),
      resume: chain(shouldRun.yes),
      every: chain(every)
    };
  };

}).call(this);
